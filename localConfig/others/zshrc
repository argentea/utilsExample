# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/kp/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="bira"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git extract z)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
alias ll='ls -alFh'
alias la='ls -Ah'
alias l='ls -CF'
alias format='astyle'
alias c='clear'
alias p='cd -'
alias b='cd ..'
alias cdl='cd $L'
alias cdd='cd $D'
alias cdr='cd $R'
alias cdf='cd ~/data/justForFun'
alias cdt='cd ~/test'
alias cdb='cd ~/data/book'
alias cda='cd ~/data/acbb'
alias cdp='cd ~/data/research/paper'
alias cdg='cd ~/data/git'
alias tmux='tmux -u'
alias mplay='amarok'
alias utar='tar -zxvf'
alias chrome='google-chrome'
alias xc='xclip'
alias evi='evince'
alias ff='firefox'
alias cbbpy='vim "$(date +"%Y_%m_%d_%H_%M").py'
alias git='LANG=en_GB git'
#alias ohmyzsh="mate ~/.oh-my-zsh"
# Highlight the current autocomplete option
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# Better SSH/Rsync/SCP Autocomplete
# Allow for autocomplete to be case insensitive

# Initialize the autocompletion
autoload -Uz compinit && compinit -i
h=()
if [[ -r ~/.ssh/config ]]; then
  h=($h ${${${(@M)${(f)"$(cat ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
fi
#if [[ -r ~/.ssh/known_hosts ]]; then
#  h=($h ${${${(f)"$(cat ~/.ssh/known_hosts{,2} || true)"}%%\ *}%%,*}) 2>/dev/null
#fi
if [[ $#h -gt 0 ]]; then
  zstyle ':completion:*:(scp|ssh|rsync):*' hosts $h
  zstyle ':completion:*:slogin:*' hosts $h
fi
zstyle ':completion:*:ssh:argument-1:*' tag-order hosts
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' expand suffix
zstyle ':completion:*' file-sort access
zstyle ':completion:*' list-suffixes true
zstyle ':completion:*' matcher-list '+' '+m:{[:lower:]}={[:upper:]} m:{[:lower:][:upper:]}={[:upper:][:lower:]} r:|[._-]=* r:|=*' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' max-errors 1
zstyle ':completion:*' prompt 'c%e'
zstyle :compinstall filename '/home/kunpengjiang/.zshrc'

bu() {
	if [[ $# == 0 ]]; then
		echo "usage:\n\tbuild r(rebuild by remove build/)\n\tbuild c(continue build without cmake .. )\n\tbuild n(new build with cmake ..)";
		echo "\tbuild d(with debug)"
	fi
	ThreadNum=$(expr $(nproc) - 2)
	CurrentFile=${PWD##*/};
	InBuildFile=0;
	runResult=0;
	if [[ ${CurrentFile} == "build" ]]; then
		InBuildFile=1;
		print InBuildFile
		cd ..;
	else
		InBuildFile=2;
	fi
	if [[ $1 == 'r' && $# == 1 ]]; then
		rm -r build;
		mkdir build;
		cd build;
		if cmake .. && make -j$ThreadNum; then
			echo "good news"
			runResult=0;
		else
			echo "bad news"
			runResult=1;
		fi
		cp ./compile_commands.json ..;
		if [[ InBuildFile == 2 ]]; then
			InBuildFile=3;
		fi
	fi
	if [[ $1 == 'c' && $# == 1 ]]; then
		cd build;
		if make -j$ThreadNum; then
			echo "good news"
			runResult=0;
		else
			echo "bad news"
			runResult=1;
		fi
		cp ./compile_commands.json ..;
		if [[ InBuildFile == 2 ]]; then
			InBuildFile=3;
		fi
	fi
	if [[ $1 == 'n' && $# == 1 ]]; then
		cd build;
		if cmake .. && make -j$ThreadNum; then
			echo "good news"
			runResult=0;
		else
			echo "bad news"
			runResult=1;
		fi
		cp ./compile_commands.json ..;
		if [[ InBuildFile == 2 ]]; then
			InBuildFile=3;
		fi

	fi
	if [[ $1 == 'd' && $# == 1 ]]; then
		cd build;
		if cmake -DCMAKE_BUILD_TYPE=Debug .. && make -j$ThreadNum; then
			echo "good news"
			runResult=0;
		else
			echo "bad news"
			runResult=1;
		fi
		cp ./compile_commands.json ..;
		if [[ InBuildFile == 2 ]]; then
			InBuildFile=3;
		fi
	fi

	if [[ InBuildFile == 3 ]]; then
		cd ..;
	fi
	return runResult
}


add_window(){
	tmux new-window -t $1 -n $2 -d $3
}


createMonitorTmux(){
	SESSIONNAME="monitor"
	add_window $SESSIONNAME "local" "htop"
	tmux select-window -t 1
	tmux split-window -v -d watch -n 3 iostat /dev/nvme0n1
	tmux select-pane -t 1
	tmux split-window -h -d nethogs -d 1
}

cmux(){

	if [[ $# == 0 ]]; then
		SESSIONNAME="tmp"
	else
		SESSIONNAME=$1
	fi

	tmux has-session -t $SESSIONNAME 2&> /dev/null;

	if [[ $? != 0 ]]; then
		tmux new-session -s $SESSIONNAME -d
		if [[ $SESSIONNAME = "monitor" ]]; then
			createMonitorTmux
		fi
	fi


	tmux attach -t $SESSIONNAME
}

ZSH_TMUX_AUTOSTART=true
autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
bindkey -v



#ENVIRONMENT
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/kp/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/kp/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/kp/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/kp/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
conda activate daily

#export DPCPP_HOME=~/sycl_workspace
export b=$HOME/utils/buildsh

:<< 'COMMENT'
export PATH=/home/kunpengjiang/bin:$PATH
export PATH=/home/kunpengjiang/bin/gcc-10.2.0/bin:$PATH
export PATH=/home/kunpengjiang/bin/valgrind/bin:$PATH
#export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=$HOME/.mujoco/bin:$PATH
export LD_LIBRARY_PATH=/home/kunpengjiang/bin/gcc-10.2.0/lib64:$LD_LIBRARY_PATH

#export CC=/usr/bin/gcc
export CC=/home/kunpengjiang/bin/gcc-10.2.0/bin/gcc-10.2.0

#export CXX=/usr/bin/g++
export CXX=/home/kunpengjiang/bin/gcc-10.2.0/bin/g++-10.2.0
export FC=/home/kunpengjiang/bin/gcc-10.2.0/bin/gfortran-10.2.0
VALGRIND_LIB="/home/kunpengjiang/bin/valgrind/lib/valgrind"
export VALGRIND_LIB
#export VALGRIND_LIB=/home/kunpengjiang/opt/valgrind-3.17.0/*
export LD_LIBRARY_PATH=/home/kunpengjiang/.mujoco/mujoco200/bin:$LD_LIBRARY_PATH
LANG="en_US.UTF-8"
LC_ALL=en_US.UTF-8
LANGUAGE="en_US:en"

LC_CTYPE="en_US.UTF-8"
LC_NUMERIC=en_US.UTF-8
LC_TIME=en_US.UTF-8
LC_COLLATE="en_US.UTF-8"
LC_MONETARY=en_US.UTF-8
LC_MESSAGES="en_US.UTF-8"
LC_PAPER=en_US.UTF-8
LC_NAME=en_US.UTF-8
LC_ADDRESS=en_US.UTF-8
LC_TELEPHONE=en_US.UTF-8
LC_MEASUREMENT=en_US.UTF-8
LC_IDENTIFICATION=en_US.UTF-8

export PATH=/usr/local/cuda/bin:${PATH}
export LD_LIBRARY_PATH=/usr/loca/cuda/lib64:${LD_LIBRARY_PATH}
COMMENT
